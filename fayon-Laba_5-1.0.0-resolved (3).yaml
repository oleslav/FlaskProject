---
openapi: 3.0.0
info:
  title: NoteBook
  description: Лабораторна робота №5 Варіант-2
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0
  description: Laba_5
tags:
- name: user
  description: operations about user
- name: note
  description: operations about note
paths:
  /notes:
    get:
      tags:
      - note
      summary: List all notes
      responses:
        "200":
          description: Show all notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        "400":
          description: Error
          content: {}
      security:
      - note_auth:
        - write:tickets
        - read:tickets
    post:
      tags:
      - note
      summary: Add note
      operationId: addNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        "200":
          description: Note has been added
          links:
            address:
              operationRef: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0/notes
        "405":
          description: Validation exception
          content: {}
      security:
      - note_auth:
        - write:tickets
        - read:tickets
  /notes/{id}:
    get:
      tags:
      - note
      summary: Note by ID
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Show note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: The note has not been found
          content: {}
      security:
      - note_auth:
        - write:tickets
        - read:tickets
  /notes/{id}/edit:
    put:
      tags:
      - note
      summary: Edit the note
      operationId: editNote
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        "201":
          description: The note has been edited
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoteStatistic'
          links:
            address:
              operationRef: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0/notes
        "400":
          description: Invalid ID supplied
        "403":
          description: Exceeded number of edits
          links:
            address:
              operationRef: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0/notes
        "405":
          description: Validation exception
          links:
            address:
              operationRef: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0/notes
      security:
      - note_auth:
        - write:tickets
        - read:tickets
  /notes/{id}/delete:
    delete:
      tags:
      - note
      summary: Delete note
      operationId: deleteNote
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "201":
          description: The note has been deleted
          links:
            address:
              operationRef: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0/notes
        "400":
          description: Invalid ID supplied
        "404":
          description: The note has not been found
          links:
            address:
              operationRef: https://virtserver.swaggerhub.com/fayon/Laba_5/1.0.0/notes
      security:
      - note_auth:
        - write:tickets
        - read:tickets
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: Create new user
      operationId: createUser
      requestBody:
        description: Created user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: The user has been created
          content: {}
        "400":
          description: Invalid input
  /user/login:
    get:
      tags:
      - user
      summary: Logs user
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Logged
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
          content: {}
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out
      operationId: logoutUser
      responses:
        "200":
          description: Logs out successfully
          content: {}
        "400":
          description: Error
          content: {}
  /userstats/{id}:
    get:
      tags:
      - user
      summary: User statistic
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Show the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoteStatistic'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: The user has not been found
          content: {}
      security:
      - note_auth:
        - write:tickets
        - read:tickets
components:
  schemas:
    Note:
      required:
      - numberEdits
      - tag
      - text
      type: object
      properties:
        text:
          maxLength: 404
          type: string
        numberEdits:
          maximum: 5
          minimum: 0
          type: integer
        tag:
          $ref: '#/components/schemas/Tag'
    User:
      required:
      - email
      - id
      - password
      - user_name
      type: object
      properties:
        user_name:
          type: string
        id:
          type: integer
          format: uuid
        password:
          maxLength: 20
          minLength: 0
          type: string
          format: password
        email:
          type: string
          format: email
    Tag:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: uuid
        name:
          maxLength: 25
          minLength: 0
          type: string
    NoteStatistic:
      required:
      - id
      - note_id
      - time
      - user_id
      type: object
      properties:
        id:
          type: integer
          format: uuid
        user_id:
          type: integer
          format: uuid
        note_id:
          type: integer
          format: uuid
        time:
          type: string
  securitySchemes:
    note_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:notes: modify notes in your account
            read:notes: read your notes
    api_key:
      type: apiKey
      name: api_key
      in: header
